{"version":3,"sources":["images/Union.svg","componets/Button/Button.js","componets/UserName/UserName.js","componets/UserEmail/UserEmail.js","componets/UserPassword/UserPassword.js","store/user.js","componets/Success/Success.js","componets/Registration/Registretion.js","componets/App/App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Button","_ref","isValid","Object","objectWithoutProperties","react_default","a","createElement","Fragment","type","className","cn","button__disabled","disabled","UserName","props","_React$useState","React","useState","name","date","_React$useState2","slicedToArray","inputValue","setInputValue","_React$useState3","_React$useState4","inputError","setInputError","_React$useState5","_React$useState6","inputDirty","setInputDirty","_React$useState7","_React$useState8","setIsValid","blurHandler","e","target","objectSpread","console","log","useEffect","onSubmit","preventDefault","onSubmite","minLength","onBlur","style","color","onChange","value","length","test","nameHandler","required","user-name__error_visible","dateHandler","componets_Button_Button","messege","UserEmail","email","emailHandler","user-email__error_visible","UserPassword","password","passwordRepeat","passwordHandler","password__error_visible","passwordRepeatHandler","user","User","classCallCheck","this","birthDate","makeAutoObservable","data","Success","observer","src","okImage","alt","Registration","step","setStep","nextStep","componets_UserName_UserName","addUserName","componets_UserEmail_UserEmail","addUserEmail","componets_UserPassword_UserPassword","addUserPassword","componets_Success_Success","App","Registretion","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","componets_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.2f859d7c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Union.7fc4c149.svg\";","import React from 'react';\r\nimport './Button.css';\r\nimport cn from 'classnames';\r\n\r\nfunction Button({ isValid, ...props }) {\r\n\r\n    return (\r\n        <>\r\n            <button\r\n                type=\"submit\"\r\n                className={cn('button', { 'button__disabled': isValid })}\r\n                disabled={isValid}>\r\n                Далее\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport './UserName.css';\r\nimport cn from 'classnames';\r\nimport Button from '../Button/Button'\r\n// import { CurrentUserContext } from '../../contexts/CurrentUserContext';\r\n\r\nfunction UserName(props) {\r\n\r\n    // const currentUser = React.useContext(CurrentUserContext);\r\n    //значения инпутов\r\n    const [inputValue, setInputValue] = React.useState({\r\n        name: '',\r\n        date: '',\r\n    });\r\n    // наличие ошибки при вводе данных\r\n    const [inputError, setInputError] = React.useState({\r\n        name: true,\r\n        date: true,\r\n    });\r\n    //состояние посещения инпута\r\n    const [inputDirty, setInputDirty] = React.useState({\r\n        name: false,\r\n        date: false,\r\n    });\r\n    //валидность формы\r\n    const [isValid, setIsValid] = React.useState(true);\r\n\r\n    function blurHandler(e) {\r\n        switch (e.target.name) {\r\n            case 'name':\r\n                return setInputDirty({ ...inputDirty, name: true })\r\n            case 'date':\r\n                return setInputDirty({ ...inputDirty, date: true })\r\n            default:\r\n                console.log('Не соответствует ни одному из вариантов')\r\n        }\r\n    };\r\n    // проверка валидность всей формы\r\n    React.useEffect(() => {\r\n        if (\r\n            !inputError.name &&\r\n            !inputError.date\r\n        ) {\r\n            setIsValid(false)\r\n        } else {\r\n            setIsValid(true)\r\n        }\r\n    }, [inputError]);\r\n\r\n    //обработчик инпута имени\r\n    function nameHandler(e) {\r\n        setInputValue({ ...inputValue, name: e.target.value })\r\n        const reg = /^[a-z]+$/i;\r\n        setInputError({ ...inputError, name: (e.target.value.length < 4 || !reg.test(e.target.value))})\r\n    };\r\n\r\n    //обработчик инпута date\r\n    function dateHandler(e) {\r\n        setInputValue({ ...inputValue, date: e.target.value });\r\n        setInputError({ ...inputError, date: false })\r\n    };\r\n\r\n    function handlerSubmit(e) {\r\n        e.preventDefault();\r\n        props.onSubmite(inputValue);\r\n    };\r\n\r\n    return (\r\n        <section className=\"user-name\">\r\n            <h1 className=\"user-name__title\">Введите данные для регистации</h1>\r\n            <form className=\"user-name__form\" onSubmit={handlerSubmit}>\r\n                <label className=\"user-name__label\">Имя Фамилия Отчество\r\n            <input\r\n                        className=\"user-name__input user-name__input_error\"\r\n                        type=\"text\"\r\n                        minLength=\"3\"\r\n                        onBlur={(e) => {\r\n                            blurHandler(e)\r\n                        }}\r\n                        style={{ color: inputError.name & inputDirty.name ? 'red' : 'black' }}\r\n                        onChange={(e) => {\r\n                            nameHandler(e)\r\n                        }}\r\n                        name=\"name\"\r\n                        value={inputValue.name}\r\n                        required\r\n                    />\r\n                </label>\r\n                <span\r\n                    className={cn('user-name__error', { 'user-name__error_visible': inputError.name & inputDirty.name })}>\r\n                    Имя заполнено некорректно\r\n                </span>\r\n                <div className=\"user-name__line\" />\r\n                <label className=\"user-name__label\">Дата рождения\r\n            <input\r\n                        className=\"user-name__input\"\r\n                        type=\"date\"\r\n                        onBlur={(e) => {\r\n                            blurHandler(e)\r\n                        }}\r\n                        style={{ color: inputError.date & inputDirty.date ? 'red' : 'black' }}\r\n                        onChange={(e) => {\r\n                            dateHandler(e)\r\n                        }}\r\n                        name=\"date\"\r\n                        value={inputValue.date}\r\n                        required\r\n                    />\r\n                </label>\r\n                <span\r\n                    className={cn('user-name__error', { 'user-name__error_visible': inputError.date & inputDirty.date })}>\r\n                    Проверьте дату рождения\r\n                    </span>\r\n                < Button isValid={isValid} messege={props.messege} />\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default UserName;","import React from 'react';\r\nimport './UserEmail.css';\r\nimport cn from 'classnames';\r\nimport Button from '../Button/Button'\r\n// import { CurrentUserContext } from '../../contexts/CurrentUserContext';\r\n\r\nfunction UserEmail({ onSubmite, ...props }) {\r\n\r\n    // const currentUser = React.useContext(CurrentUserContext);\r\n    //значения инпутов\r\n    const [inputValue, setInputValue] = React.useState({\r\n        email: ''\r\n    });\r\n    // наличие ошибки при вводе данных\r\n    const [inputError, setInputError] = React.useState({\r\n        email: true\r\n    });\r\n    //состояние посещения инпута\r\n    const [inputDirty, setInputDirty] = React.useState({\r\n        email: false\r\n    });\r\n    //валидность формы\r\n    const [isValid, setIsValid] = React.useState(true);\r\n\r\n    function blurHandler(e) {\r\n        return setInputDirty({ ...inputDirty, email: true })\r\n    };\r\n\r\n    // проверка валидность всей формы\r\n    React.useEffect(() => {\r\n        if (\r\n            !inputError.email\r\n        ) {\r\n            setIsValid(false)\r\n        } else {\r\n            setIsValid(true)\r\n        }\r\n    }, [inputError]);\r\n\r\n    //обработчик инпута email\r\n    function emailHandler(e) {\r\n        setInputValue({ ...inputValue, email: e.target.value })\r\n        const reg = /^[A-Z0-9._%+-]+@[A-Z0-9-]+.+.[A-Z]{2,4}$/i\r\n        setInputError({ ...inputError, email: !reg.test(e.target.value) })\r\n    };\r\n\r\n    function handlerSubmit(e) {\r\n        e.preventDefault();\r\n        onSubmite(inputValue);\r\n    };\r\n\r\n    return (\r\n        <section className=\"user-email\">\r\n            <h1 className=\"user-email__title\">Введите адрес электронной почты</h1>\r\n            <form className=\"user-email__form\" onSubmit={handlerSubmit}>\r\n\r\n                <label className=\"user-email__label\">Email\r\n            <input\r\n                        className=\"user-email__input\"\r\n                        type=\"email\"\r\n                        onBlur={(e) => {\r\n                            blurHandler(e)\r\n                        }}\r\n                        style={{ color: inputError.email & inputDirty.email ? 'red' : 'black' }}\r\n                        onChange={(e) => {\r\n                            emailHandler(e)\r\n                        }}\r\n                        name=\"email\"\r\n                        value={inputValue.email}\r\n                        required\r\n                    />\r\n                </label>\r\n                <span\r\n                    className={cn('user-email__error', { 'user-email__error_visible': inputError.email & inputDirty.email })}>\r\n                    Поле Email заполнено некорректно\r\n                </span>\r\n                <div className=\"user-email__line\" />\r\n                < Button isValid={isValid} messege={props.messege} />\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default UserEmail;","import React from 'react';\r\nimport './UserPassword.css';\r\nimport cn from 'classnames';\r\nimport Button from '../Button/Button'\r\n// import { CurrentUserContext } from '../../contexts/CurrentUserContext';\r\n\r\nfunction UserPassword({ onSubmite, ...props }) {\r\n\r\n    // const currentUser = React.useContext(CurrentUserContext);\r\n    //значения инпутов\r\n    const [inputValue, setInputValue] = React.useState({\r\n        password: '',\r\n        passwordRepeat: '',\r\n    });\r\n    // наличие ошибки при вводе данных\r\n    const [inputError, setInputError] = React.useState({\r\n        password: true,\r\n        passwordRepeat: true,\r\n    });\r\n    //состояние посещения инпута\r\n    const [inputDirty, setInputDirty] = React.useState({\r\n        password: false,\r\n        passwordRepeat: false,\r\n    });\r\n    //валидность формы\r\n    const [isValid, setIsValid] = React.useState(true);\r\n\r\n    function blurHandler(e) {\r\n        switch (e.target.name) {\r\n            case 'password':\r\n                return setInputDirty({ ...inputDirty, password: true })\r\n            case 'passwordRepeat':\r\n                return setInputDirty({ ...inputDirty, passwordRepeat: true })\r\n            default:\r\n                console.log('Не соответствует ни одному из вариантов')\r\n        }\r\n    };\r\n    \r\n    // проверка валидность всей формы\r\n    React.useEffect(() => {\r\n        if (\r\n            !inputError.password &&\r\n            !inputError.passwordRepeat) {\r\n            setIsValid(false)\r\n        } else {\r\n            setIsValid(true)\r\n        }\r\n    }, [inputError]);\r\n\r\n    //обработчик инпута password\r\n    function passwordHandler(e) {\r\n        setInputValue({ ...inputValue, password: e.target.value })\r\n        setInputError({ ...inputError, password: e.target.value.length < 6 })\r\n    };\r\n\r\n    //обработчик инпута passwordRepeat\r\n    function passwordRepeatHandler(e) {\r\n        setInputValue({ ...inputValue, passwordRepeat: e.target.value });\r\n        setInputError({ ...inputError, passwordRepeat: e.target.value.length < 6 })\r\n    };\r\n\r\n    function handlerSubmit(e) {\r\n        e.preventDefault();\r\n        if (inputValue.password === inputValue.passwordRepeat) {\r\n            onSubmite(inputValue);\r\n        } else {\r\n            setInputError({ ...inputError, passwordRepeat: true})\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section className=\"password\">\r\n            <h1 className=\"password__title\">Введите пароль</h1>\r\n            <form className=\"password__form\" onSubmit={handlerSubmit}>\r\n                <label className=\"password__label\">Пароль\r\n            <input\r\n                        className=\"password__input password__input_error\"\r\n                        type=\"password\"\r\n                        minLength=\"6\"\r\n                        onBlur={(e) => {\r\n                            blurHandler(e)\r\n                        }}\r\n                        style={{ color: inputError.password & inputDirty.password ? 'red' : 'black' }}\r\n                        onChange={(e) => {\r\n                            passwordHandler(e)\r\n                        }}\r\n                        name=\"password\"\r\n                        value={inputValue.password}\r\n                        required\r\n                    />\r\n                </label>\r\n                <span\r\n                    className={cn('password__error', { 'password__error_visible': inputError.password & inputDirty.password })}>\r\n                        Пароль ненадежен\r\n                </span>\r\n                <div className=\"password__line\" />\r\n                <label className=\"password__label\">Повторите пароль\r\n            <input\r\n                        className=\"password__input\"\r\n                        type=\"password\"\r\n                        onBlur={(e) => {\r\n                            blurHandler(e)\r\n                        }}\r\n                        style={{ color: inputError.password & inputDirty.password ? 'red' : 'black' }}\r\n                        onChange={(e) => {\r\n                            passwordRepeatHandler(e)\r\n                        }}\r\n                        name=\"passwordRepeat\"\r\n                        value={inputValue.passwordRepeat}\r\n                        required\r\n                    />\r\n                </label>\r\n                <span\r\n                    className={cn('password__error', { 'password__error_visible': inputError.passwordRepeat & inputDirty.passwordRepeat })}>\r\n                    Пароли не совпадают\r\n                    </span>\r\n                < Button isValid={isValid} messege={props.messege} />\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default UserPassword;","import { makeAutoObservable } from \"mobx\";\r\n\r\nclass User {\r\n    user = {\r\n        name: '',\r\n        birthDate: '',\r\n        email: '',\r\n        password: ''\r\n    };\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    };\r\n\r\n    addUserName(data) {\r\n        this.user.name = data.name;\r\n        this.user.birthDate = data.date;\r\n        return this.user;\r\n    };\r\n\r\n    addUserEmail(data) {\r\n        this.user.email = data.email;\r\n        return this.user\r\n    };\r\n\r\n    addUserPassword(data) {\r\n        this.user.password = data.password;\r\n        return this.user;\r\n    };\r\n}\r\n\r\nconst user = new User();\r\n\r\nexport default user;","import React from 'react';\r\nimport './Success.css';\r\nimport okImage from '../../images/Union.svg';\r\nimport { observer } from 'mobx-react';\r\nimport user from '../../store/user';\r\n\r\nconst Success = observer(() => {\r\n\r\n    return (\r\n        <div className=\"success\" >\r\n            <div className=\"success__container\">\r\n                <h2 className=\"success__title\">Поздравляем, {user.user.name}, вы успешно загеристрированы!</h2>\r\n                <img src={okImage} className=\"success__image\" alt=\"Знак подсказки\" />\r\n                <div className=\"success__block\">\r\n                    <p className=\"success__subtitle\">Ваше имя: {user.user.name}</p>\r\n                    <p className=\"success__subtitle\">Ваша дата рождения: {user.user.birthDate}</p>\r\n                    <p className=\"success__subtitle\">Ваш email: {user.user.email}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\nexport default Success;","import React from 'react';\r\nimport UserName from '../UserName/UserName';\r\nimport UserEmail from '../UserEmail/UserEmail';\r\nimport UserPassword from '../UserPassword/UserPassword';\r\nimport Success from '../Success/Success';\r\nimport { observer } from 'mobx-react';\r\nimport user from '../../store/user';\r\n\r\nconst Registration = observer(() => {\r\n\r\n    const [step, setStep] = React.useState(1);\r\n\r\n    const nextStep = () => {\r\n        setStep(step + 1);\r\n    };\r\n\r\n    const handleNameSubmite = (data) => {\r\n        nextStep();\r\n        user.addUserName(data);\r\n    };\r\n    const handleEmailSubmite = (data) => {\r\n        nextStep();\r\n        user.addUserEmail(data);\r\n    };\r\n    const handlePasswordSubmite = (data) => {\r\n        nextStep();\r\n        user.addUserPassword(data);\r\n    };\r\n\r\n\r\n    switch (step) {\r\n        case 1:\r\n            return (\r\n                <UserName\r\n                    onSubmite={handleNameSubmite}\r\n                />\r\n            );\r\n        case 2:\r\n            return (\r\n                <UserEmail\r\n                    onSubmite={handleEmailSubmite}\r\n                />\r\n            );\r\n        case 3:\r\n            return (\r\n                <UserPassword\r\n                    onSubmite={handlePasswordSubmite}\r\n                />\r\n            );\r\n        case 4:\r\n            return (\r\n                <Success />\r\n            );\r\n        default:\r\n            (console.log('Error'))\r\n    }\r\n});\r\n\r\nexport default Registration;","import React from 'react';\nimport './App.css';\nimport Registration from '../Registration/Registretion';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      < Registration/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './componets/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}